# -*- coding: utf-8 -*-
"""Predict_Submission 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rpUIpVY5XKsd-aznGco0xoX8vBfFjtyG
"""

# Import Library
import pandas as pd
import joblib
from sklearn.preprocessing import StandardScaler

# Memuat model, scaler dan nama kolom fitur
model = joblib.load("/content/model_random_forest.pkl")
scaler = joblib.load("/content/scaler.pkl")
trained_features_cols = joblib.load("/content/trained_features_cols.pkl")
print("Model, scaler, dan nama fitur berhasil dimuat dari Google Drive.")

# Menyiapkan data baru untuk prediksi

input_data_raw = pd.DataFrame([{
    'Age': 35,
    'BusinessTravel': 'Travel_Rarely',
    'DailyRate': 800,
    'Department': 'Sales',
    'DistanceFromHome': 10,
    'Education': 3,
    'EducationField': 'Life Sciences',
    'EnvironmentSatisfaction': 3,
    'Gender': 'Female',
    'HourlyRate': 60,
    'JobInvolvement': 3,
    'JobLevel': 2,
    'JobRole': 'Sales Executive',
    'JobSatisfaction': 4,
    'MaritalStatus': 'Married',
    'MonthlyIncome': 5000,
    'MonthlyRate': 10000,
    'NumCompaniesWorked': 1,
    'OverTime': 'No',
    'PercentSalaryHike': 13,
    'PerformanceRating': 3,
    'RelationshipSatisfaction': 4,
    'StockOptionLevel': 1,
    'TotalWorkingYears': 10,
    'TrainingTimesLastYear': 3,
    'WorkLifeBalance': 3,
    'YearsAtCompany': 5,
    'YearsInCurrentRole': 4,
    'YearsSinceLastPromotion': 2,
    'YearsWithCurrManager': 3,
}])

print("Data Input Karyawan Baru (Mentah):")
display(input_data_raw)

"""# **DATA PREPROCESSING**"""

# Menghapus kolom tidak informatif
columns_to_drop_initial = ['EmployeeId', 'EmployeeCount', 'Over18', 'StandardHours']
input_processed = input_data_raw.drop(columns=columns_to_drop_initial, errors='ignore')

# Identifikasi kolom kategorikal nominal untuk One-Hot Encoding
nominal_cols_for_ohe = [
    'BusinessTravel',
    'Department',
    'EducationField',
    'Gender',
    'JobRole',
    'MaritalStatus',
    'OverTime'
]

# Melakukan One-Hot Encoding pada data baru
input_processed = pd.get_dummies(input_processed, columns=nominal_cols_for_ohe, drop_first=True)
input_processed = input_processed.reindex(columns=trained_features_cols, fill_value=0)


# Standardisasi Fitur
input_scaled_final = scaler.transform(input_processed)
input_scaled_final_df = pd.DataFrame(input_scaled_final, columns=trained_features_cols)

print("Data Input Setelah Pra-pemrosesan (Siap Prediksi):")
print(input_scaled_final_df)
print("\n")

"""# **DATA PREDICTION**"""

# Prediksi kelas (0 atau 1)
prediction_class = model.predict(input_scaled_final_df)

# Prediksi probabilitas (probabilitas Attrition = 1)
prediction_proba = model.predict_proba(input_scaled_final_df)[:, 1]

# Menampilkan Hasil
print(f"Prediksi Attrition (Kelas): {prediction_class[0]}")
print(f"Probabilitas Attrition: {prediction_proba[0]:.4f}")

if prediction_class[0] == 1:
    print("Karyawan ini DIPREDIKSI BERISIKO Attrition.")
else:
    print("Karyawan ini DIPREDIKSI TIDAK BERISIKO Attrition.")